diff --git a/src/minecraft/net/minecraft/src/FontRenderer.java b/src/minecraft/net/minecraft/src/FontRenderer.java
index 485e5ad..12bfa6b 100644
--- a/src/minecraft/net/minecraft/src/FontRenderer.java
+++ b/src/minecraft/net/minecraft/src/FontRenderer.java
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import net.minecraft.src.betterfonts.StringCache;
 import java.awt.image.BufferedImage;
 import java.io.IOException;
 import java.io.InputStream;
@@ -13,6 +14,9 @@ import org.lwjgl.opengl.GL11;
 
 public class FontRenderer
 {
+    public static boolean betterFontsEnabled = true;
+    public StringCache stringCache;
+
     private static final Pattern field_52015_r = Pattern.compile("(?i)\\u00A7[0-9A-FK-OR]");
     private int charWidth[];
     public int fontTextureName;
@@ -178,6 +182,8 @@ public class FontRenderer
 
             colorCode[l] = (l1 & 0xff) << 16 | (j2 & 0xff) << 8 | l2 & 0xff;
         }
+
+        stringCache = new StringCache(renderEngine, colorCode);
     }
 
     /**
@@ -330,6 +336,10 @@ public class FontRenderer
      */
     private String bidiReorder(String par1Str)
     {
+        if (betterFontsEnabled)
+        {
+            return par1Str;
+        }
         if (par1Str == null || !Bidi.requiresBidi(par1Str.toCharArray(), 0, par1Str.length()))
         {
             return par1Str;
@@ -564,7 +574,14 @@ public class FontRenderer
             GL11.glColor4f(red, blue, green, alpha);
             posX = par2;
             posY = par3;
-            renderStringAtPos(par1Str, par5);
+            if (betterFontsEnabled)
+            {
+                posX += stringCache.renderString(par1Str, par2, par3, par4, par5);
+            }
+            else
+            {
+                renderStringAtPos(par1Str, par5);
+            }
             return (int)posX;
         }
         else
@@ -578,6 +595,10 @@ public class FontRenderer
      */
     public int getStringWidth(String par1Str)
     {
+        if (betterFontsEnabled)
+        {
+            return stringCache.getStringWidth(par1Str);
+        }
         if (par1Str == null)
         {
             return 0;
@@ -667,6 +688,10 @@ public class FontRenderer
      */
     public String trimStringToWidth(String par1Str, int par2, boolean par3)
     {
+        if (betterFontsEnabled)
+        {
+            return stringCache.trimStringToWidth(par1Str, par2, par3);
+        }
         StringBuilder stringbuilder = new StringBuilder();
         int i = 0;
         int j = par3 ? par1Str.length() - 1 : 0;
@@ -925,6 +950,10 @@ public class FontRenderer
      */
     private int sizeStringToWidth(String par1Str, int par2)
     {
+        if (betterFontsEnabled)
+        {
+            return stringCache.sizeStringToWidth(par1Str, par2);
+        }
         int i = par1Str.length();
         int j = 0;
         int k = 0;
