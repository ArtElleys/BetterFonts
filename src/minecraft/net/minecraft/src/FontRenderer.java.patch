diff --git a/src/minecraft/net/minecraft/src/FontRenderer.java b/src/minecraft/net/minecraft/src/FontRenderer.java
index dc2ddf6..4c68255 100644
--- a/src/minecraft/net/minecraft/src/FontRenderer.java
+++ b/src/minecraft/net/minecraft/src/FontRenderer.java
@@ -24,7 +24,7 @@ public class FontRenderer
     public int FONT_HEIGHT;
     public Random fontRandom;
     private byte glyphWidth[];
-    private final int glyphTextureName[];
+    private int glyphTextureName[]; /* Removed final for use with MCPatcher's initialize() */
     private int colorCode[];
 
     /**
@@ -33,7 +33,7 @@ public class FontRenderer
     private int boundTextureName;
 
     /** The RenderEngine used to load and setup glyph textures. */
-    private final RenderEngine renderEngine;
+    private RenderEngine renderEngine; /* Removed final for user with MCPatcher's initialize() */
 
     /** Current X coordinate at which to draw the next character. */
     private float posX;
@@ -44,7 +44,7 @@ public class FontRenderer
     /**
      * If true, strings should be rendered with Unicode fonts instead of the default.png font
      */
-    private boolean unicodeFlag;
+    public boolean unicodeFlag; /* MCPatcher expects unicodeFlag to be public */
 
     /**
      * If true, the Unicode Bidirectional Algorithm should be run before rendering any string.
@@ -104,6 +104,17 @@ public class FontRenderer
 
     public FontRenderer(GameSettings par1GameSettings, String par2Str, RenderEngine par3RenderEngine, boolean par4)
     {
+        unicodeFlag = par4;
+        initialize(par1GameSettings, par2Str, par3RenderEngine);
+    }
+
+    /**
+     * MCPatcher injects an initialize() method into FontRenderer, so it'll expect one to exist. This will reload the bitmap
+     * font when switching textures with mcpatcher installed. Otherwise it's never called directly by Minecraft, except
+     * once by the above constructor.
+     */
+    public void initialize(GameSettings par1GameSettings, String par2Str, RenderEngine par3RenderEngine)
+    {
         charWidth = new int[256];
         fontTextureName = 0;
         FONT_HEIGHT = 9;
@@ -117,7 +128,6 @@ public class FontRenderer
         underlineStyle = false;
         strikethroughStyle = false;
         renderEngine = par3RenderEngine;
-        unicodeFlag = par4;
         BufferedImage bufferedimage;
 
         try
@@ -214,8 +224,12 @@ public class FontRenderer
             colorCode[l] = (l1 & 0xff) << 16 | (j2 & 0xff) << 8 | l2 & 0xff;
         }
 
-        /* Only use OpenType rendering for the primary FontRenderer and not for the enchantment table Standard Galactic renderer */
-        if(par2Str.equals("/font/default.png"))
+        /*
+         * Only use OpenType rendering for the primary FontRenderer and not for the enchantment table Standard Galactic renderer.
+         * Also, mcpatcher will call initialize() when switching texture packs to reload the bitmap font, but the StringCache
+         * should not be re-created a second time or it will leak OpenGL textures.
+         */
+        if(par2Str.equals("/font/default.png") && stringCache == null)
         {
             stringCache = new StringCache(colorCode);
 
